# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'HKLviewer5.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################


from __future__ import absolute_import, division, print_function

from .qt import QWebEngineView
try: # if invoked by cctbx.python or some such
  from crys3d.hklviewer.helpers import HeaderDataTableWidget, MyQDoubleSpinBox, MyQPlainTextEdit # implicit import
except Exception as e: # if invoked by a generic python that doesn't know cctbx modules
  from .helpers import HeaderDataTableWidget, MyQDoubleSpinBox, MyQPlainTextEdit # implicit import

from .qt import ( QCoreApplication, QMetaObject, QRect, QSize, Qt,  # implicit import
 QFont, QAbstractItemView, QAction, QCheckBox, QComboBox, QLineEdit, QDockWidget,
 QDoubleSpinBox, QFrame, QGridLayout, QGroupBox, QLabel, QPlainTextEdit,
 QPushButton, QRadioButton, QScrollArea, QSlider, QSplitter, QSizePolicy, QSpinBox,
 QTableWidget, QTabWidget, QTextEdit, QWidget, QIcon, QAbstractScrollArea, )


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1047, 701)
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.actionOpen_reflection_file = QAction(MainWindow)
        self.actionOpen_reflection_file.setObjectName(u"actionOpen_reflection_file")
        self.actionSettings = QAction(MainWindow)
        self.actionSettings.setObjectName(u"actionSettings")
        self.actiondebug = QAction(MainWindow)
        self.actiondebug.setObjectName(u"actiondebug")
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionSave_reflection_file = QAction(MainWindow)
        self.actionSave_reflection_file.setObjectName(u"actionSave_reflection_file")
        self.actionReset_View = QAction(MainWindow)
        self.actionReset_View.setObjectName(u"actionReset_View")
        self.actionSave_Current_Image = QAction(MainWindow)
        self.actionSave_Current_Image.setObjectName(u"actionSave_Current_Image")
        self.actionCCTBXwebsite = QAction(MainWindow)
        self.actionCCTBXwebsite.setObjectName(u"actionCCTBXwebsite")
        self.actionLocal_Help = QAction(MainWindow)
        self.actionLocal_Help.setObjectName(u"actionLocal_Help")
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName(u"actionAbout")
        self.actionColour_Gradient = QAction(MainWindow)
        self.actionColour_Gradient.setObjectName(u"actionColour_Gradient")
        self.actionHKLviewer_Tutorial = QAction(MainWindow)
        self.actionHKLviewer_Tutorial.setObjectName(u"actionHKLviewer_Tutorial")
        self.actionBackground_Colour = QAction(MainWindow)
        self.actionBackground_Colour.setObjectName(u"actionBackground_Colour")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.gridLayout_2 = QGridLayout(self.centralwidget)
        self.gridLayout_2.setSpacing(4)
        self.gridLayout_2.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.widget = QWidget(self.centralwidget)
        self.widget.setObjectName(u"widget")
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.gridLayout_32 = QGridLayout(self.widget)
        self.gridLayout_32.setSpacing(4)
        self.gridLayout_32.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_32.setObjectName(u"gridLayout_32")
        self.gridLayout_32.setContentsMargins(0, 0, 0, 0)
        self.BrowserBox = QWebEngineView(self.widget)
        self.BrowserBox.setObjectName(u"BrowserBox")
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy1.setHorizontalStretch(4)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.BrowserBox.sizePolicy().hasHeightForWidth())
        self.BrowserBox.setSizePolicy(sizePolicy1)

        self.gridLayout_32.addWidget(self.BrowserBox, 0, 0, 1, 1)


        self.gridLayout_2.addWidget(self.widget, 0, 0, 1, 1)

        #MainWindow.setCentralWidget(self.centralwidget)
        self.dockWidget = QDockWidget(MainWindow)
        self.dockWidget.setObjectName(u"dockWidget")
        self.dockWidget.setFeatures(QDockWidget.DockWidgetFloatable|QDockWidget.DockWidgetMovable)
        self.dockControls = QWidget()
        self.dockControls.setObjectName(u"dockControls")
        self.gridLayout_9 = QGridLayout(self.dockControls)
        self.gridLayout_9.setSpacing(3)
        self.gridLayout_9.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.gridLayout_9.setContentsMargins(2, 2, 2, 2)
        self.widget_2 = QWidget(self.dockControls)
        self.widget_2.setObjectName(u"widget_2")
        sizePolicy2 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy2)
        self.gridLayout_31 = QGridLayout(self.widget_2)
        self.gridLayout_31.setSpacing(6)
        self.gridLayout_31.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_31.setObjectName(u"gridLayout_31")
        self.gridLayout_31.setContentsMargins(0, 0, 0, 0)
        self.splitter_2 = QSplitter(self.widget_2)
        self.splitter_2.setObjectName(u"splitter_2")
        self.splitter_2.setOrientation(Qt.Vertical)
        self.tabWidget = QTabWidget(self.splitter_2)
        self.tabWidget.setObjectName(u"tabWidget")
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setUsesScrollButtons(True)
        self.tabPresetbuttons = QWidget()
        self.tabPresetbuttons.setObjectName(u"tabPresetbuttons")
        self.gridLayout_25 = QGridLayout(self.tabPresetbuttons)
        self.gridLayout_25.setSpacing(4)
        self.gridLayout_25.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_25.setObjectName(u"gridLayout_25")
        self.scrollArea_2 = QScrollArea(self.tabPresetbuttons)
        self.scrollArea_2.setObjectName(u"scrollArea_2")
        sizePolicy3 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.scrollArea_2.sizePolicy().hasHeightForWidth())
        self.scrollArea_2.setSizePolicy(sizePolicy3)
        self.scrollArea_2.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollAreaWidgetContents_2 = QWidget()
        self.scrollAreaWidgetContents_2.setObjectName(u"scrollAreaWidgetContents_2")
        self.scrollAreaWidgetContents_2.setGeometry(QRect(0, 0, 344, 509))
        self.gridLayout_29 = QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_29.setSpacing(4)
        self.gridLayout_29.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_29.setObjectName(u"gridLayout_29")
        self.gridLayout_29.setContentsMargins(0, 0, 0, 0)
        self.PresetButtonsFrame = QFrame(self.scrollAreaWidgetContents_2)
        self.PresetButtonsFrame.setObjectName(u"PresetButtonsFrame")
        sizePolicy4 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(1)
        sizePolicy4.setHeightForWidth(self.PresetButtonsFrame.sizePolicy().hasHeightForWidth())
        self.PresetButtonsFrame.setSizePolicy(sizePolicy4)
        self.PresetButtonsFrame.setFrameShape(QFrame.StyledPanel)
        self.PresetButtonsFrame.setFrameShadow(QFrame.Raised)
        self.gridLayout_24 = QGridLayout(self.PresetButtonsFrame)
        self.gridLayout_24.setSpacing(4)
        self.gridLayout_24.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_24.setObjectName(u"gridLayout_24")
        self.gridLayout_24.setContentsMargins(0, 0, 0, 0)

        self.gridLayout_29.addWidget(self.PresetButtonsFrame, 0, 0, 1, 1)

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)

        self.gridLayout_25.addWidget(self.scrollArea_2, 1, 0, 1, 2)

        self.XtriageBtn = QPushButton(self.tabPresetbuttons)
        self.XtriageBtn.setObjectName(u"XtriageBtn")
        sizePolicy5 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Preferred)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.XtriageBtn.sizePolicy().hasHeightForWidth())
        self.XtriageBtn.setSizePolicy(sizePolicy5)

        self.gridLayout_25.addWidget(self.XtriageBtn, 0, 0, 1, 1)

        self.XtricorderBtn = QPushButton(self.tabPresetbuttons)
        self.XtricorderBtn.setObjectName(u"XtricorderBtn")
        sizePolicy5.setHeightForWidth(self.XtricorderBtn.sizePolicy().hasHeightForWidth())
        self.XtricorderBtn.setSizePolicy(sizePolicy5)

        self.gridLayout_25.addWidget(self.XtricorderBtn, 0, 1, 1, 1)

        self.tabWidget.addTab(self.tabPresetbuttons, "")
        self.tabDetails = QWidget()
        self.tabDetails.setObjectName(u"tabDetails")
        self.gridLayout_23 = QGridLayout(self.tabDetails)
        self.gridLayout_23.setSpacing(4)
        self.gridLayout_23.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_23.setObjectName(u"gridLayout_23")
        self.gridLayout_23.setContentsMargins(0, 0, 0, 0)
        self.splitter = QSplitter(self.tabDetails)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setOrientation(Qt.Vertical)
        self.widget_4 = QWidget(self.splitter)
        self.widget_4.setObjectName(u"widget_4")
        sizePolicy2.setHeightForWidth(self.widget_4.sizePolicy().hasHeightForWidth())
        self.widget_4.setSizePolicy(sizePolicy2)
        self.gridLayout_5 = QGridLayout(self.widget_4)
        self.gridLayout_5.setSpacing(4)
        self.gridLayout_5.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.millertable = HeaderDataTableWidget(self.widget_4)
        if (self.millertable.columnCount() < 2):
            self.millertable.setColumnCount(2)
        if (self.millertable.rowCount() < 1):
            self.millertable.setRowCount(1)
        self.millertable.setObjectName(u"millertable")
        sizePolicy6 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(2)
        sizePolicy6.setHeightForWidth(self.millertable.sizePolicy().hasHeightForWidth())
        self.millertable.setSizePolicy(sizePolicy6)
        self.millertable.setVerticalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.millertable.setHorizontalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.millertable.setRowCount(1)
        self.millertable.setColumnCount(2)
        self.millertable.horizontalHeader().setMinimumSectionSize(5)
        self.millertable.horizontalHeader().setStretchLastSection(False)
        self.millertable.verticalHeader().setDefaultSectionSize(24)

        self.gridLayout_5.addWidget(self.millertable, 1, 0, 1, 1)

        self.label = QLabel(self.widget_4)
        self.label.setObjectName(u"label")
        sizePolicy7 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy7)
        self.label.setWordWrap(True)

        self.gridLayout_5.addWidget(self.label, 0, 0, 1, 1)

        self.splitter.addWidget(self.widget_4)
        self.SpaceGrpUCellText = QTextEdit(self.splitter)
        self.SpaceGrpUCellText.setObjectName(u"SpaceGrpUCellText")
        sizePolicy8 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(2)
        sizePolicy8.setHeightForWidth(self.SpaceGrpUCellText.sizePolicy().hasHeightForWidth())
        self.SpaceGrpUCellText.setSizePolicy(sizePolicy8)
        self.SpaceGrpUCellText.setMinimumSize(QSize(0, 30))
        self.SpaceGrpUCellText.setMaximumSize(QSize(16777215, 192))
        font = QFont()
        font.setFamily(u"Arial")
        self.SpaceGrpUCellText.setFont(font)
        self.SpaceGrpUCellText.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.SpaceGrpUCellText.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        self.SpaceGrpUCellText.setReadOnly(True)
        self.SpaceGrpUCellText.setOverwriteMode(True)
        self.SpaceGrpUCellText.setAcceptRichText(False)
        self.splitter.addWidget(self.SpaceGrpUCellText)
        self.scrollArea = QScrollArea(self.splitter)
        self.scrollArea.setObjectName(u"scrollArea")
        sizePolicy3.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy3)
        self.scrollArea.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QWidget()
        self.scrollAreaWidgetContents.setObjectName(u"scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setGeometry(QRect(0, 0, 349, 395))
        sizePolicy6.setHeightForWidth(self.scrollAreaWidgetContents.sizePolicy().hasHeightForWidth())
        self.scrollAreaWidgetContents.setSizePolicy(sizePolicy6)
        self.gridLayout_4 = QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_4.setSpacing(4)
        self.gridLayout_4.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.functionTabWidget = QTabWidget(self.scrollAreaWidgetContents)
        self.functionTabWidget.setObjectName(u"functionTabWidget")
        sizePolicy9 = QSizePolicy(QSizePolicy.Ignored, QSizePolicy.Preferred)
        sizePolicy9.setHorizontalStretch(0)
        sizePolicy9.setVerticalStretch(0)
        sizePolicy9.setHeightForWidth(self.functionTabWidget.sizePolicy().hasHeightForWidth())
        self.functionTabWidget.setSizePolicy(sizePolicy9)
        self.tab = QWidget()
        self.tab.setObjectName(u"tab")
        self.gridLayout_28 = QGridLayout(self.tab)
        self.gridLayout_28.setSpacing(4)
        self.gridLayout_28.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_28.setObjectName(u"gridLayout_28")
        self.sysabsentcheckbox = QCheckBox(self.tab)
        self.sysabsentcheckbox.setObjectName(u"sysabsentcheckbox")

        self.gridLayout_28.addWidget(self.sysabsentcheckbox, 1, 0, 1, 1, Qt.AlignTop)

        self.ExpandReflsGroupBox = QGroupBox(self.tab)
        self.ExpandReflsGroupBox.setObjectName(u"ExpandReflsGroupBox")
        sizePolicy7.setHeightForWidth(self.ExpandReflsGroupBox.sizePolicy().hasHeightForWidth())
        self.ExpandReflsGroupBox.setSizePolicy(sizePolicy7)
        self.ExpandReflsGroupBox.setCheckable(True)
        self.ExpandReflsGroupBox.setChecked(False)
        self.gridLayout_3 = QGridLayout(self.ExpandReflsGroupBox)
        self.gridLayout_3.setSpacing(4)
        self.gridLayout_3.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.gridLayout_3.setContentsMargins(6, 6, 6, 6)
        self.expandP1checkbox = QCheckBox(self.ExpandReflsGroupBox)
        self.expandP1checkbox.setObjectName(u"expandP1checkbox")

        self.gridLayout_3.addWidget(self.expandP1checkbox, 0, 0, 1, 1)

        self.expandAnomalouscheckbox = QCheckBox(self.ExpandReflsGroupBox)
        self.expandAnomalouscheckbox.setObjectName(u"expandAnomalouscheckbox")

        self.gridLayout_3.addWidget(self.expandAnomalouscheckbox, 0, 1, 1, 1)


        self.gridLayout_28.addWidget(self.ExpandReflsGroupBox, 0, 0, 1, 3, Qt.AlignTop)

        self.widget_3 = QWidget(self.tab)
        self.widget_3.setObjectName(u"widget_3")
        sizePolicy7.setHeightForWidth(self.widget_3.sizePolicy().hasHeightForWidth())
        self.widget_3.setSizePolicy(sizePolicy7)
        self.gridLayout_20 = QGridLayout(self.widget_3)
        self.gridLayout_20.setSpacing(4)
        self.gridLayout_20.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_20.setObjectName(u"gridLayout_20")
        self.gridLayout_20.setContentsMargins(0, 0, 0, 0)
        self.missingcheckbox = QCheckBox(self.widget_3)
        self.missingcheckbox.setObjectName(u"missingcheckbox")

        self.gridLayout_20.addWidget(self.missingcheckbox, 0, 0, 2, 2)

        self.onlymissingcheckbox = QCheckBox(self.widget_3)
        self.onlymissingcheckbox.setObjectName(u"onlymissingcheckbox")

        self.gridLayout_20.addWidget(self.onlymissingcheckbox, 2, 0, 1, 1)


        self.gridLayout_28.addWidget(self.widget_3, 1, 1, 1, 2, Qt.AlignTop)

        self.SpacegroupLabel = QLabel(self.tab)
        self.SpacegroupLabel.setObjectName(u"SpacegroupLabel")
        sizePolicy8.setHeightForWidth(self.SpacegroupLabel.sizePolicy().hasHeightForWidth())
        self.SpacegroupLabel.setSizePolicy(sizePolicy8)

        self.gridLayout_28.addWidget(self.SpacegroupLabel, 2, 0, 1, 1, Qt.AlignTop)

        self.SpaceGroupComboBox = QComboBox(self.tab)
        self.SpaceGroupComboBox.setObjectName(u"SpaceGroupComboBox")
        sizePolicy8.setHeightForWidth(self.SpaceGroupComboBox.sizePolicy().hasHeightForWidth())
        self.SpaceGroupComboBox.setSizePolicy(sizePolicy8)

        self.gridLayout_28.addWidget(self.SpaceGroupComboBox, 2, 1, 1, 2, Qt.AlignTop)

        self.functionTabWidget.addTab(self.tab, "")
        self.tab_2 = QWidget()
        self.tab_2.setObjectName(u"tab_2")
        self.gridLayout_7 = QGridLayout(self.tab_2)
        self.gridLayout_7.setSpacing(4)
        self.gridLayout_7.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.ClipPlaneChkGroupBox = QGroupBox(self.tab_2)
        self.ClipPlaneChkGroupBox.setObjectName(u"ClipPlaneChkGroupBox")
        sizePolicy10 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy10.setHorizontalStretch(0)
        sizePolicy10.setVerticalStretch(1)
        sizePolicy10.setHeightForWidth(self.ClipPlaneChkGroupBox.sizePolicy().hasHeightForWidth())
        self.ClipPlaneChkGroupBox.setSizePolicy(sizePolicy10)
        self.ClipPlaneChkGroupBox.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.ClipPlaneChkGroupBox.setCheckable(True)
        self.ClipPlaneChkGroupBox.setChecked(False)
        self.gridLayout_6 = QGridLayout(self.ClipPlaneChkGroupBox)
        self.gridLayout_6.setSpacing(4)
        self.gridLayout_6.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.parallel_current_orientation_btn = QRadioButton(self.ClipPlaneChkGroupBox)
        self.parallel_current_orientation_btn.setObjectName(u"parallel_current_orientation_btn")
        sizePolicy7.setHeightForWidth(self.parallel_current_orientation_btn.sizePolicy().hasHeightForWidth())
        self.parallel_current_orientation_btn.setSizePolicy(sizePolicy7)
        self.parallel_current_orientation_btn.setChecked(True)

        self.gridLayout_6.addWidget(self.parallel_current_orientation_btn, 0, 0, 1, 2)

        self.normal_vec_btn = QRadioButton(self.ClipPlaneChkGroupBox)
        self.normal_vec_btn.setObjectName(u"normal_vec_btn")
        sizePolicy7.setHeightForWidth(self.normal_vec_btn.sizePolicy().hasHeightForWidth())
        self.normal_vec_btn.setSizePolicy(sizePolicy7)

        self.gridLayout_6.addWidget(self.normal_vec_btn, 1, 0, 1, 2)

        self.clipplane_normal_vector_combo = QComboBox(self.ClipPlaneChkGroupBox)
        self.clipplane_normal_vector_combo.setObjectName(u"clipplane_normal_vector_combo")
        sizePolicy11 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy11.setHorizontalStretch(2)
        sizePolicy11.setVerticalStretch(0)
        sizePolicy11.setHeightForWidth(self.clipplane_normal_vector_combo.sizePolicy().hasHeightForWidth())
        self.clipplane_normal_vector_combo.setSizePolicy(sizePolicy11)

        self.gridLayout_6.addWidget(self.clipplane_normal_vector_combo, 1, 2, 2, 1)

        self.normal_realspace_vec_btn = QRadioButton(self.ClipPlaneChkGroupBox)
        self.normal_realspace_vec_btn.setObjectName(u"normal_realspace_vec_btn")
        sizePolicy12 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Preferred)
        sizePolicy12.setHorizontalStretch(1)
        sizePolicy12.setVerticalStretch(0)
        sizePolicy12.setHeightForWidth(self.normal_realspace_vec_btn.sizePolicy().hasHeightForWidth())
        self.normal_realspace_vec_btn.setSizePolicy(sizePolicy12)

        self.gridLayout_6.addWidget(self.normal_realspace_vec_btn, 2, 0, 1, 1)

        self.normal_realspace_vec_label = QLabel(self.ClipPlaneChkGroupBox)
        self.normal_realspace_vec_label.setObjectName(u"normal_realspace_vec_label")
        sizePolicy13 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy13.setHorizontalStretch(1)
        sizePolicy13.setVerticalStretch(0)
        sizePolicy13.setHeightForWidth(self.normal_realspace_vec_label.sizePolicy().hasHeightForWidth())
        self.normal_realspace_vec_label.setSizePolicy(sizePolicy13)
        self.normal_realspace_vec_label.setWordWrap(True)

        self.gridLayout_6.addWidget(self.normal_realspace_vec_label, 2, 1, 2, 1)

        self.label_13 = QLabel(self.ClipPlaneChkGroupBox)
        self.label_13.setObjectName(u"label_13")
        sizePolicy7.setHeightForWidth(self.label_13.sizePolicy().hasHeightForWidth())
        self.label_13.setSizePolicy(sizePolicy7)
        self.label_13.setTextFormat(Qt.RichText)
        self.label_13.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)

        self.gridLayout_6.addWidget(self.label_13, 3, 2, 1, 1)

        self.clipplane_normal_vector_length = QLineEdit(self.ClipPlaneChkGroupBox)
        self.clipplane_normal_vector_length.setObjectName(u"clipplane_normal_vector_length")
        sizePolicy7.setHeightForWidth(self.clipplane_normal_vector_length.sizePolicy().hasHeightForWidth())
        self.clipplane_normal_vector_length.setSizePolicy(sizePolicy7)
        self.clipplane_normal_vector_length.setReadOnly(False)

        self.gridLayout_6.addWidget(self.clipplane_normal_vector_length, 3, 3, 1, 2)

        self.label_15 = QLabel(self.ClipPlaneChkGroupBox)
        self.label_15.setObjectName(u"label_15")
        sizePolicy2.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy2)
        self.label_15.setWordWrap(True)

        self.gridLayout_6.addWidget(self.label_15, 4, 0, 1, 2)

        self.AutoClipWidthCheckBox = QCheckBox(self.ClipPlaneChkGroupBox)
        self.AutoClipWidthCheckBox.setObjectName(u"AutoClipWidthCheckBox")
        sizePolicy2.setHeightForWidth(self.AutoClipWidthCheckBox.sizePolicy().hasHeightForWidth())
        self.AutoClipWidthCheckBox.setSizePolicy(sizePolicy2)

        self.gridLayout_6.addWidget(self.AutoClipWidthCheckBox, 4, 2, 1, 3)

        self.hkldist_spinBox = MyQDoubleSpinBox(self.ClipPlaneChkGroupBox)
        self.hkldist_spinBox.setObjectName(u"hkldist_spinBox")
        sizePolicy7.setHeightForWidth(self.hkldist_spinBox.sizePolicy().hasHeightForWidth())
        self.hkldist_spinBox.setSizePolicy(sizePolicy7)
        self.hkldist_spinBox.setDecimals(3)
        self.hkldist_spinBox.setMinimum(-1000.000000000000000)
        self.hkldist_spinBox.setMaximum(1000.000000000000000)

        self.gridLayout_6.addWidget(self.hkldist_spinBox, 5, 0, 1, 2)

        self.label_21 = QLabel(self.ClipPlaneChkGroupBox)
        self.label_21.setObjectName(u"label_21")
        sizePolicy2.setHeightForWidth(self.label_21.sizePolicy().hasHeightForWidth())
        self.label_21.setSizePolicy(sizePolicy2)
        self.label_21.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.label_21.setWordWrap(True)

        self.gridLayout_6.addWidget(self.label_21, 5, 2, 1, 2)

        self.clipwidth_spinBox = MyQDoubleSpinBox(self.ClipPlaneChkGroupBox)
        self.clipwidth_spinBox.setObjectName(u"clipwidth_spinBox")
        sizePolicy7.setHeightForWidth(self.clipwidth_spinBox.sizePolicy().hasHeightForWidth())
        self.clipwidth_spinBox.setSizePolicy(sizePolicy7)
        self.clipwidth_spinBox.setMinimum(0.500000000000000)
        self.clipwidth_spinBox.setMaximum(100.000000000000000)
        self.clipwidth_spinBox.setSingleStep(0.500000000000000)

        self.gridLayout_6.addWidget(self.clipwidth_spinBox, 5, 4, 1, 1)


        self.gridLayout_7.addWidget(self.ClipPlaneChkGroupBox, 0, 0, 1, 1)

        self.RotateGroupBox = QGroupBox(self.tab_2)
        self.RotateGroupBox.setObjectName(u"RotateGroupBox")
        sizePolicy4.setHeightForWidth(self.RotateGroupBox.sizePolicy().hasHeightForWidth())
        self.RotateGroupBox.setSizePolicy(sizePolicy4)
        self.gridLayout_22 = QGridLayout(self.RotateGroupBox)
        self.gridLayout_22.setSpacing(4)
        self.gridLayout_22.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_22.setObjectName(u"gridLayout_22")
        self.gridLayout_22.setContentsMargins(0, 3, 0, 0)
        self.label_14 = QLabel(self.RotateGroupBox)
        self.label_14.setObjectName(u"label_14")
        self.label_14.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)

        self.gridLayout_22.addWidget(self.label_14, 0, 0, 1, 1)

        self.angleStepHKLrotSpinBox = QDoubleSpinBox(self.RotateGroupBox)
        self.angleStepHKLrotSpinBox.setObjectName(u"angleStepHKLrotSpinBox")
        sizePolicy14 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed)
        sizePolicy14.setHorizontalStretch(0)
        sizePolicy14.setVerticalStretch(0)
        sizePolicy14.setHeightForWidth(self.angleStepHKLrotSpinBox.sizePolicy().hasHeightForWidth())
        self.angleStepHKLrotSpinBox.setSizePolicy(sizePolicy14)
        self.angleStepHKLrotSpinBox.setWrapping(True)
        self.angleStepHKLrotSpinBox.setDecimals(1)
        self.angleStepHKLrotSpinBox.setMinimum(0.000000000000000)
        self.angleStepHKLrotSpinBox.setMaximum(60.000000000000000)
        self.angleStepHKLrotSpinBox.setSingleStep(0.500000000000000)
        self.angleStepHKLrotSpinBox.setValue(1.000000000000000)

        self.gridLayout_22.addWidget(self.angleStepHKLrotSpinBox, 0, 1, 1, 1)

        self.groupBox_2 = QGroupBox(self.RotateGroupBox)
        self.groupBox_2.setObjectName(u"groupBox_2")
        self.groupBox_2.setAlignment(Qt.AlignCenter)
        self.gridLayout_16 = QGridLayout(self.groupBox_2)
        self.gridLayout_16.setSpacing(4)
        self.gridLayout_16.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_16.setObjectName(u"gridLayout_16")
        self.xHKLrotBtn = QPushButton(self.groupBox_2)
        self.xHKLrotBtn.setObjectName(u"xHKLrotBtn")
        sizePolicy15 = QSizePolicy(QSizePolicy.Ignored, QSizePolicy.Fixed)
        sizePolicy15.setHorizontalStretch(0)
        sizePolicy15.setVerticalStretch(0)
        sizePolicy15.setHeightForWidth(self.xHKLrotBtn.sizePolicy().hasHeightForWidth())
        self.xHKLrotBtn.setSizePolicy(sizePolicy15)
        icon = QIcon()
        icon.addFile(u"roundarrow2.png", QSize(), QIcon.Normal, QIcon.Off)
        self.xHKLrotBtn.setIcon(icon)
        self.xHKLrotBtn.setFlat(False)

        self.gridLayout_16.addWidget(self.xHKLrotBtn, 0, 0, 1, 1)

        self.xHKLbackrotBtn = QPushButton(self.groupBox_2)
        self.xHKLbackrotBtn.setObjectName(u"xHKLbackrotBtn")
        sizePolicy15.setHeightForWidth(self.xHKLbackrotBtn.sizePolicy().hasHeightForWidth())
        self.xHKLbackrotBtn.setSizePolicy(sizePolicy15)
        icon1 = QIcon()
        icon1.addFile(u"roundarrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.xHKLbackrotBtn.setIcon(icon1)
        self.xHKLbackrotBtn.setFlat(False)

        self.gridLayout_16.addWidget(self.xHKLbackrotBtn, 0, 1, 1, 1)


        self.gridLayout_22.addWidget(self.groupBox_2, 1, 0, 1, 1)

        self.groupBox_4 = QGroupBox(self.RotateGroupBox)
        self.groupBox_4.setObjectName(u"groupBox_4")
        self.groupBox_4.setAlignment(Qt.AlignCenter)
        self.gridLayout_19 = QGridLayout(self.groupBox_4)
        self.gridLayout_19.setSpacing(4)
        self.gridLayout_19.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_19.setObjectName(u"gridLayout_19")
        self.yHKLrotBtn = QPushButton(self.groupBox_4)
        self.yHKLrotBtn.setObjectName(u"yHKLrotBtn")
        sizePolicy15.setHeightForWidth(self.yHKLrotBtn.sizePolicy().hasHeightForWidth())
        self.yHKLrotBtn.setSizePolicy(sizePolicy15)
        self.yHKLrotBtn.setIcon(icon)

        self.gridLayout_19.addWidget(self.yHKLrotBtn, 0, 0, 1, 1)

        self.yHKLbackrotBtn = QPushButton(self.groupBox_4)
        self.yHKLbackrotBtn.setObjectName(u"yHKLbackrotBtn")
        sizePolicy15.setHeightForWidth(self.yHKLbackrotBtn.sizePolicy().hasHeightForWidth())
        self.yHKLbackrotBtn.setSizePolicy(sizePolicy15)
        self.yHKLbackrotBtn.setIcon(icon1)

        self.gridLayout_19.addWidget(self.yHKLbackrotBtn, 0, 1, 1, 1)


        self.gridLayout_22.addWidget(self.groupBox_4, 1, 1, 1, 1)

        self.groupBox_6 = QGroupBox(self.RotateGroupBox)
        self.groupBox_6.setObjectName(u"groupBox_6")
        self.groupBox_6.setAlignment(Qt.AlignCenter)
        self.gridLayout_21 = QGridLayout(self.groupBox_6)
        self.gridLayout_21.setSpacing(4)
        self.gridLayout_21.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_21.setObjectName(u"gridLayout_21")
        self.zHKLrotBtn = QPushButton(self.groupBox_6)
        self.zHKLrotBtn.setObjectName(u"zHKLrotBtn")
        sizePolicy15.setHeightForWidth(self.zHKLrotBtn.sizePolicy().hasHeightForWidth())
        self.zHKLrotBtn.setSizePolicy(sizePolicy15)
        self.zHKLrotBtn.setIcon(icon)

        self.gridLayout_21.addWidget(self.zHKLrotBtn, 0, 0, 1, 1)

        self.zHKLbackrotBtn = QPushButton(self.groupBox_6)
        self.zHKLbackrotBtn.setObjectName(u"zHKLbackrotBtn")
        sizePolicy15.setHeightForWidth(self.zHKLbackrotBtn.sizePolicy().hasHeightForWidth())
        self.zHKLbackrotBtn.setSizePolicy(sizePolicy15)
        self.zHKLbackrotBtn.setIcon(icon1)

        self.gridLayout_21.addWidget(self.zHKLbackrotBtn, 0, 1, 1, 1)


        self.gridLayout_22.addWidget(self.groupBox_6, 1, 2, 1, 1)


        self.gridLayout_7.addWidget(self.RotateGroupBox, 1, 0, 1, 1)

        self.functionTabWidget.addTab(self.tab_2, "")
        self.tab_3 = QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.gridLayout_27 = QGridLayout(self.tab_3)
        self.gridLayout_27.setSpacing(4)
        self.gridLayout_27.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_27.setObjectName(u"gridLayout_27")
        self.groupBox_3 = QGroupBox(self.tab_3)
        self.groupBox_3.setObjectName(u"groupBox_3")
        sizePolicy13.setHeightForWidth(self.groupBox_3.sizePolicy().hasHeightForWidth())
        self.groupBox_3.setSizePolicy(sizePolicy13)
        self.groupBox_3.setCheckable(False)
        self.gridLayout_10 = QGridLayout(self.groupBox_3)
        self.gridLayout_10.setSpacing(4)
        self.gridLayout_10.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.power_scale_spinBox = MyQDoubleSpinBox(self.groupBox_3)
        self.power_scale_spinBox.setObjectName(u"power_scale_spinBox")
        sizePolicy16 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Maximum)
        sizePolicy16.setHorizontalStretch(0)
        sizePolicy16.setVerticalStretch(0)
        sizePolicy16.setHeightForWidth(self.power_scale_spinBox.sizePolicy().hasHeightForWidth())
        self.power_scale_spinBox.setSizePolicy(sizePolicy16)
        self.power_scale_spinBox.setMinimum(-10.000000000000000)
        self.power_scale_spinBox.setMaximum(10.000000000000000)
        self.power_scale_spinBox.setSingleStep(0.050000000000000)
        self.power_scale_spinBox.setValue(0.500000000000000)

        self.gridLayout_10.addWidget(self.power_scale_spinBox, 1, 3, 1, 1)

        self.label_11 = QLabel(self.groupBox_3)
        self.label_11.setObjectName(u"label_11")
        sizePolicy16.setHeightForWidth(self.label_11.sizePolicy().hasHeightForWidth())
        self.label_11.setSizePolicy(sizePolicy16)

        self.gridLayout_10.addWidget(self.label_11, 2, 0, 1, 1)

        self.ManualPowerScalecheckbox = QCheckBox(self.groupBox_3)
        self.ManualPowerScalecheckbox.setObjectName(u"ManualPowerScalecheckbox")
        sizePolicy16.setHeightForWidth(self.ManualPowerScalecheckbox.sizePolicy().hasHeightForWidth())
        self.ManualPowerScalecheckbox.setSizePolicy(sizePolicy16)

        self.gridLayout_10.addWidget(self.ManualPowerScalecheckbox, 1, 0, 1, 2)

        self.label_10 = QLabel(self.groupBox_3)
        self.label_10.setObjectName(u"label_10")
        sizePolicy16.setHeightForWidth(self.label_10.sizePolicy().hasHeightForWidth())
        self.label_10.setSizePolicy(sizePolicy16)
        self.label_10.setAlignment(Qt.AlignRight|Qt.AlignTrailing|Qt.AlignVCenter)
        self.label_10.setIndent(1)

        self.gridLayout_10.addWidget(self.label_10, 1, 2, 1, 1)

        self.radii_scale_spinBox = MyQDoubleSpinBox(self.groupBox_3)
        self.radii_scale_spinBox.setObjectName(u"radii_scale_spinBox")
        sizePolicy16.setHeightForWidth(self.radii_scale_spinBox.sizePolicy().hasHeightForWidth())
        self.radii_scale_spinBox.setSizePolicy(sizePolicy16)
        self.radii_scale_spinBox.setDecimals(2)
        self.radii_scale_spinBox.setMinimum(0.000000000000000)
        self.radii_scale_spinBox.setMaximum(1000.000000000000000)
        self.radii_scale_spinBox.setSingleStep(0.200000000000000)
        self.radii_scale_spinBox.setValue(1.000000000000000)

        self.gridLayout_10.addWidget(self.radii_scale_spinBox, 2, 1, 1, 1)

        self.label_7 = QLabel(self.groupBox_3)
        self.label_7.setObjectName(u"label_7")
        sizePolicy2.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy2)
        self.label_7.setTextFormat(Qt.RichText)
        self.label_7.setScaledContents(False)
        self.label_7.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.label_7.setWordWrap(True)

        self.gridLayout_10.addWidget(self.label_7, 0, 0, 1, 4)


        self.gridLayout_27.addWidget(self.groupBox_3, 0, 0, 1, 1, Qt.AlignTop)

        self.functionTabWidget.addTab(self.tab_3, "")
        self.tab_4 = QWidget()
        self.tab_4.setObjectName(u"tab_4")
        self.gridLayout_13 = QGridLayout(self.tab_4)
        self.gridLayout_13.setSpacing(4)
        self.gridLayout_13.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.widget_6 = QWidget(self.tab_4)
        self.widget_6.setObjectName(u"widget_6")
        sizePolicy4.setHeightForWidth(self.widget_6.sizePolicy().hasHeightForWidth())
        self.widget_6.setSizePolicy(sizePolicy4)
        self.gridLayout_12 = QGridLayout(self.widget_6)
        self.gridLayout_12.setSpacing(4)
        self.gridLayout_12.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.gridLayout_12.setContentsMargins(3, 3, 3, 3)
        self.OpaqueAllCheckbox = QCheckBox(self.widget_6)
        self.OpaqueAllCheckbox.setObjectName(u"OpaqueAllCheckbox")
        sizePolicy7.setHeightForWidth(self.OpaqueAllCheckbox.sizePolicy().hasHeightForWidth())
        self.OpaqueAllCheckbox.setSizePolicy(sizePolicy7)

        self.gridLayout_12.addWidget(self.OpaqueAllCheckbox, 1, 0, 1, 1)

        self.binstable = QTableWidget(self.widget_6)
        if (self.binstable.columnCount() < 4):
            self.binstable.setColumnCount(4)
        if (self.binstable.rowCount() < 5):
            self.binstable.setRowCount(5)
        self.binstable.setObjectName(u"binstable")
        sizePolicy17 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Expanding)
        sizePolicy17.setHorizontalStretch(0)
        sizePolicy17.setVerticalStretch(1)
        sizePolicy17.setHeightForWidth(self.binstable.sizePolicy().hasHeightForWidth())
        self.binstable.setSizePolicy(sizePolicy17)
        self.binstable.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.binstable.setRowCount(5)
        self.binstable.setColumnCount(4)

        self.gridLayout_12.addWidget(self.binstable, 2, 0, 1, 2)

        self.addDatasetBtn = QPushButton(self.widget_6)
        self.addDatasetBtn.setObjectName(u"addDatasetBtn")
        sizePolicy18 = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.Fixed)
        sizePolicy18.setHorizontalStretch(0)
        sizePolicy18.setVerticalStretch(0)
        sizePolicy18.setHeightForWidth(self.addDatasetBtn.sizePolicy().hasHeightForWidth())
        self.addDatasetBtn.setSizePolicy(sizePolicy18)
        self.addDatasetBtn.setMinimumSize(QSize(0, 0))

        self.gridLayout_12.addWidget(self.addDatasetBtn, 1, 1, 1, 1)


        self.gridLayout_13.addWidget(self.widget_6, 1, 0, 1, 1)

        self.groupBox_5 = QGroupBox(self.tab_4)
        self.groupBox_5.setObjectName(u"groupBox_5")
        sizePolicy7.setHeightForWidth(self.groupBox_5.sizePolicy().hasHeightForWidth())
        self.groupBox_5.setSizePolicy(sizePolicy7)
        self.gridLayout_11 = QGridLayout(self.groupBox_5)
        self.gridLayout_11.setSpacing(4)
        self.gridLayout_11.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_11.setObjectName(u"gridLayout_11")
        self.label_12 = QLabel(self.groupBox_5)
        self.label_12.setObjectName(u"label_12")

        self.gridLayout_11.addWidget(self.label_12, 0, 1, 1, 1)

        self.Nbins_spinBox = QSpinBox(self.groupBox_5)
        self.Nbins_spinBox.setObjectName(u"Nbins_spinBox")
        sizePolicy2.setHeightForWidth(self.Nbins_spinBox.sizePolicy().hasHeightForWidth())
        self.Nbins_spinBox.setSizePolicy(sizePolicy2)
        self.Nbins_spinBox.setMinimum(1)
        self.Nbins_spinBox.setMaximum(20)

        self.gridLayout_11.addWidget(self.Nbins_spinBox, 0, 2, 1, 1)

        self.BinDataComboBox = QComboBox(self.groupBox_5)
        self.BinDataComboBox.setObjectName(u"BinDataComboBox")
        sizePolicy11.setHeightForWidth(self.BinDataComboBox.sizePolicy().hasHeightForWidth())
        self.BinDataComboBox.setSizePolicy(sizePolicy11)

        self.gridLayout_11.addWidget(self.BinDataComboBox, 0, 0, 1, 1)


        self.gridLayout_13.addWidget(self.groupBox_5, 0, 0, 1, 1)

        self.functionTabWidget.addTab(self.tab_4, "")
        self.tab_5 = QWidget()
        self.tab_5.setObjectName(u"tab_5")
        self.gridLayout_14 = QGridLayout(self.tab_5)
        self.gridLayout_14.setSpacing(4)
        self.gridLayout_14.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.ReciprocUnitCellgrp = QGroupBox(self.tab_5)
        self.ReciprocUnitCellgrp.setObjectName(u"ReciprocUnitCellgrp")
        self.ReciprocUnitCellgrp.setCheckable(False)
        self.ReciprocUnitCellgrp.setChecked(False)
        self.gridLayout_15 = QGridLayout(self.ReciprocUnitCellgrp)
        self.gridLayout_15.setSpacing(4)
        self.gridLayout_15.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.gridLayout_15.setContentsMargins(-1, 3, -1, 3)
        self.label_2 = QLabel(self.ReciprocUnitCellgrp)
        self.label_2.setObjectName(u"label_2")
        sizePolicy2.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy2)
        self.label_2.setWordWrap(True)

        self.gridLayout_15.addWidget(self.label_2, 1, 0, 1, 1)

        self.reciprocunitcellslider = QSlider(self.ReciprocUnitCellgrp)
        self.reciprocunitcellslider.setObjectName(u"reciprocunitcellslider")
        sizePolicy19 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy19.setHorizontalStretch(0)
        sizePolicy19.setVerticalStretch(0)
        sizePolicy19.setHeightForWidth(self.reciprocunitcellslider.sizePolicy().hasHeightForWidth())
        self.reciprocunitcellslider.setSizePolicy(sizePolicy19)
        self.reciprocunitcellslider.setMinimum(0)
        self.reciprocunitcellslider.setMaximum(100)
        self.reciprocunitcellslider.setOrientation(Qt.Horizontal)

        self.gridLayout_15.addWidget(self.reciprocunitcellslider, 1, 1, 1, 1)

        self.DrawReciprocUnitCellBox = QCheckBox(self.ReciprocUnitCellgrp)
        self.DrawReciprocUnitCellBox.setObjectName(u"DrawReciprocUnitCellBox")

        self.gridLayout_15.addWidget(self.DrawReciprocUnitCellBox, 0, 0, 1, 1)

        self.label_4 = QLabel(self.ReciprocUnitCellgrp)
        self.label_4.setObjectName(u"label_4")
        self.label_4.setWordWrap(True)

        self.gridLayout_15.addWidget(self.label_4, 0, 2, 2, 1)


        self.gridLayout_14.addWidget(self.ReciprocUnitCellgrp, 1, 0, 1, 1)

        self.RotationVectorsBox = QGroupBox(self.tab_5)
        self.RotationVectorsBox.setObjectName(u"RotationVectorsBox")
        sizePolicy20 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.MinimumExpanding)
        sizePolicy20.setHorizontalStretch(0)
        sizePolicy20.setVerticalStretch(0)
        sizePolicy20.setHeightForWidth(self.RotationVectorsBox.sizePolicy().hasHeightForWidth())
        self.RotationVectorsBox.setSizePolicy(sizePolicy20)
        self.RotationVectorsBox.setMaximumSize(QSize(16777215, 16777215))
        self.RotationVectorsBox.setCheckable(False)
        self.gridLayout_8 = QGridLayout(self.RotationVectorsBox)
        self.gridLayout_8.setSpacing(4)
        self.gridLayout_8.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.gridLayout_8.setContentsMargins(3, 3, 3, 3)
        self.ShowAllVectorsBtn = QCheckBox(self.RotationVectorsBox)
        self.ShowAllVectorsBtn.setObjectName(u"ShowAllVectorsBtn")
        sizePolicy7.setHeightForWidth(self.ShowAllVectorsBtn.sizePolicy().hasHeightForWidth())
        self.ShowAllVectorsBtn.setSizePolicy(sizePolicy7)
        self.ShowAllVectorsBtn.setTristate(True)

        self.gridLayout_8.addWidget(self.ShowAllVectorsBtn, 0, 0, 1, 1)

        self.RotateAroundframe = QFrame(self.RotationVectorsBox)
        self.RotateAroundframe.setObjectName(u"RotateAroundframe")
        sizePolicy21 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Minimum)
        sizePolicy21.setHorizontalStretch(1)
        sizePolicy21.setVerticalStretch(0)
        sizePolicy21.setHeightForWidth(self.RotateAroundframe.sizePolicy().hasHeightForWidth())
        self.RotateAroundframe.setSizePolicy(sizePolicy21)
        self.RotateAroundframe.setFrameShape(QFrame.StyledPanel)
        self.RotateAroundframe.setFrameShadow(QFrame.Raised)
        self.gridLayout_18 = QGridLayout(self.RotateAroundframe)
        self.gridLayout_18.setSpacing(4)
        self.gridLayout_18.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_18.setObjectName(u"gridLayout_18")
        self.rotavecangle_labeltxt = QLabel(self.RotateAroundframe)
        self.rotavecangle_labeltxt.setObjectName(u"rotavecangle_labeltxt")
        sizePolicy22 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Minimum)
        sizePolicy22.setHorizontalStretch(0)
        sizePolicy22.setVerticalStretch(0)
        sizePolicy22.setHeightForWidth(self.rotavecangle_labeltxt.sizePolicy().hasHeightForWidth())
        self.rotavecangle_labeltxt.setSizePolicy(sizePolicy22)
        self.rotavecangle_labeltxt.setMinimumSize(QSize(120, 0))
        self.rotavecangle_labeltxt.setWordWrap(True)

        self.gridLayout_18.addWidget(self.rotavecangle_labeltxt, 0, 0, 1, 2)

        self.rotavecangle_slider = QSlider(self.RotateAroundframe)
        self.rotavecangle_slider.setObjectName(u"rotavecangle_slider")
        sizePolicy20.setHeightForWidth(self.rotavecangle_slider.sizePolicy().hasHeightForWidth())
        self.rotavecangle_slider.setSizePolicy(sizePolicy20)
        self.rotavecangle_slider.setMinimumSize(QSize(120, 0))
        self.rotavecangle_slider.setMaximum(720)
        self.rotavecangle_slider.setPageStep(20)
        self.rotavecangle_slider.setOrientation(Qt.Horizontal)
        self.rotavecangle_slider.setTickPosition(QSlider.TicksAbove)
        self.rotavecangle_slider.setTickInterval(30)

        self.gridLayout_18.addWidget(self.rotavecangle_slider, 1, 0, 1, 2)

        self.AlignVectorGroupBox = QGroupBox(self.RotateAroundframe)
        self.AlignVectorGroupBox.setObjectName(u"AlignVectorGroupBox")
        self.AlignVectorGroupBox.setEnabled(True)
        sizePolicy22.setHeightForWidth(self.AlignVectorGroupBox.sizePolicy().hasHeightForWidth())
        self.AlignVectorGroupBox.setSizePolicy(sizePolicy22)
        self.AlignVectorGroupBox.setCheckable(True)
        self.AlignVectorGroupBox.setChecked(False)
        self.gridLayout_17 = QGridLayout(self.AlignVectorGroupBox)
        self.gridLayout_17.setSpacing(4)
        self.gridLayout_17.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_17.setObjectName(u"gridLayout_17")
        self.gridLayout_17.setContentsMargins(3, 3, 3, 3)
        self.AlignParallelBtn = QRadioButton(self.AlignVectorGroupBox)
        self.AlignParallelBtn.setObjectName(u"AlignParallelBtn")
        sizePolicy7.setHeightForWidth(self.AlignParallelBtn.sizePolicy().hasHeightForWidth())
        self.AlignParallelBtn.setSizePolicy(sizePolicy7)

        self.gridLayout_17.addWidget(self.AlignParallelBtn, 0, 0, 1, 1)

        self.AlignNormalBtn = QRadioButton(self.AlignVectorGroupBox)
        self.AlignNormalBtn.setObjectName(u"AlignNormalBtn")
        sizePolicy7.setHeightForWidth(self.AlignNormalBtn.sizePolicy().hasHeightForWidth())
        self.AlignNormalBtn.setSizePolicy(sizePolicy7)
        self.AlignNormalBtn.setChecked(True)

        self.gridLayout_17.addWidget(self.AlignNormalBtn, 1, 0, 1, 1)


        self.gridLayout_18.addWidget(self.AlignVectorGroupBox, 2, 0, 1, 2)

        self.AnimaRotCheckBox = QCheckBox(self.RotateAroundframe)
        self.AnimaRotCheckBox.setObjectName(u"AnimaRotCheckBox")
        sizePolicy20.setHeightForWidth(self.AnimaRotCheckBox.sizePolicy().hasHeightForWidth())
        self.AnimaRotCheckBox.setSizePolicy(sizePolicy20)

        self.gridLayout_18.addWidget(self.AnimaRotCheckBox, 3, 0, 1, 2)

        self.label_8 = QLabel(self.RotateAroundframe)
        self.label_8.setObjectName(u"label_8")

        self.gridLayout_18.addWidget(self.label_8, 4, 0, 1, 1)

        self.AnimateSpeedSlider = QSlider(self.RotateAroundframe)
        self.AnimateSpeedSlider.setObjectName(u"AnimateSpeedSlider")
        sizePolicy7.setHeightForWidth(self.AnimateSpeedSlider.sizePolicy().hasHeightForWidth())
        self.AnimateSpeedSlider.setSizePolicy(sizePolicy7)
        self.AnimateSpeedSlider.setMinimum(1)
        self.AnimateSpeedSlider.setMaximum(20)
        self.AnimateSpeedSlider.setPageStep(1)
        self.AnimateSpeedSlider.setValue(5)
        self.AnimateSpeedSlider.setSliderPosition(5)
        self.AnimateSpeedSlider.setOrientation(Qt.Horizontal)
        self.AnimateSpeedSlider.setTickPosition(QSlider.TicksAbove)
        self.AnimateSpeedSlider.setTickInterval(1)

        self.gridLayout_18.addWidget(self.AnimateSpeedSlider, 4, 1, 1, 1)


        self.gridLayout_8.addWidget(self.RotateAroundframe, 0, 1, 2, 1)

        self.vectortable2 = QTableWidget(self.RotationVectorsBox)
        if (self.vectortable2.columnCount() < 4):
            self.vectortable2.setColumnCount(4)
        if (self.vectortable2.rowCount() < 4):
            self.vectortable2.setRowCount(4)
        self.vectortable2.setObjectName(u"vectortable2")
        sizePolicy23 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy23.setHorizontalStretch(3)
        sizePolicy23.setVerticalStretch(3)
        sizePolicy23.setHeightForWidth(self.vectortable2.sizePolicy().hasHeightForWidth())
        self.vectortable2.setSizePolicy(sizePolicy23)
        self.vectortable2.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.vectortable2.setVerticalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.vectortable2.setHorizontalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.vectortable2.setWordWrap(False)
        self.vectortable2.setRowCount(4)
        self.vectortable2.setColumnCount(4)
        self.vectortable2.horizontalHeader().setCascadingSectionResizes(True)
        self.vectortable2.horizontalHeader().setDefaultSectionSize(50)
        self.vectortable2.verticalHeader().setVisible(False)
        self.vectortable2.verticalHeader().setMinimumSectionSize(10)
        self.vectortable2.verticalHeader().setDefaultSectionSize(24)

        self.gridLayout_8.addWidget(self.vectortable2, 1, 0, 1, 1)


        self.gridLayout_14.addWidget(self.RotationVectorsBox, 0, 0, 1, 1)

        self.RealUnitCellBoxgrp = QGroupBox(self.tab_5)
        self.RealUnitCellBoxgrp.setObjectName(u"RealUnitCellBoxgrp")
        sizePolicy2.setHeightForWidth(self.RealUnitCellBoxgrp.sizePolicy().hasHeightForWidth())
        self.RealUnitCellBoxgrp.setSizePolicy(sizePolicy2)
        self.RealUnitCellBoxgrp.setCheckable(False)
        self.RealUnitCellBoxgrp.setChecked(False)
        self.gridLayout_26 = QGridLayout(self.RealUnitCellBoxgrp)
        self.gridLayout_26.setSpacing(4)
        self.gridLayout_26.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_26.setObjectName(u"gridLayout_26")
        self.gridLayout_26.setContentsMargins(-1, 3, -1, 3)
        self.label_6 = QLabel(self.RealUnitCellBoxgrp)
        self.label_6.setObjectName(u"label_6")
        sizePolicy2.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy2)
        self.label_6.setWordWrap(True)

        self.gridLayout_26.addWidget(self.label_6, 1, 0, 1, 1)

        self.unitcellslider = QSlider(self.RealUnitCellBoxgrp)
        self.unitcellslider.setObjectName(u"unitcellslider")
        sizePolicy19.setHeightForWidth(self.unitcellslider.sizePolicy().hasHeightForWidth())
        self.unitcellslider.setSizePolicy(sizePolicy19)
        self.unitcellslider.setMinimum(0)
        self.unitcellslider.setMaximum(100)
        self.unitcellslider.setOrientation(Qt.Horizontal)

        self.gridLayout_26.addWidget(self.unitcellslider, 1, 1, 1, 1)

        self.DrawRealUnitCellBox = QCheckBox(self.RealUnitCellBoxgrp)
        self.DrawRealUnitCellBox.setObjectName(u"DrawRealUnitCellBox")
        sizePolicy7.setHeightForWidth(self.DrawRealUnitCellBox.sizePolicy().hasHeightForWidth())
        self.DrawRealUnitCellBox.setSizePolicy(sizePolicy7)

        self.gridLayout_26.addWidget(self.DrawRealUnitCellBox, 0, 0, 1, 1)

        self.label_5 = QLabel(self.RealUnitCellBoxgrp)
        self.label_5.setObjectName(u"label_5")
        sizePolicy2.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy2)
        self.label_5.setWordWrap(True)

        self.gridLayout_26.addWidget(self.label_5, 0, 2, 2, 1)


        self.gridLayout_14.addWidget(self.RealUnitCellBoxgrp, 2, 0, 1, 1)

        self.functionTabWidget.addTab(self.tab_5, "")

        self.gridLayout_4.addWidget(self.functionTabWidget, 0, 0, 1, 1)

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.splitter.addWidget(self.scrollArea)

        self.gridLayout_23.addWidget(self.splitter, 0, 0, 1, 1)

        self.tabWidget.addTab(self.tabDetails, "")
        self.splitter_2.addWidget(self.tabWidget)
        self.tabText = QTabWidget(self.splitter_2)
        self.tabText.setObjectName(u"tabText")
        sizePolicy.setHeightForWidth(self.tabText.sizePolicy().hasHeightForWidth())
        self.tabText.setSizePolicy(sizePolicy)
        self.tabInfo = QWidget()
        self.tabInfo.setObjectName(u"tabInfo")
        self.gridLayout_30 = QGridLayout(self.tabInfo)
        self.gridLayout_30.setSpacing(4)
        self.gridLayout_30.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_30.setObjectName(u"gridLayout_30")
        self.gridLayout_30.setContentsMargins(0, 0, 0, 0)
        self.textInfo = MyQPlainTextEdit(self.tabInfo)
        self.textInfo.setObjectName(u"textInfo")
        sizePolicy17.setHeightForWidth(self.textInfo.sizePolicy().hasHeightForWidth())
        self.textInfo.setSizePolicy(sizePolicy17)
        font1 = QFont()
        font1.setFamily(u"Courier New")
        font1.setPointSize(9)
        self.textInfo.setFont(font1)
        self.textInfo.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.textInfo.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.textInfo.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.textInfo.setLineWrapMode(QPlainTextEdit.NoWrap)
        self.textInfo.setReadOnly(True)

        self.gridLayout_30.addWidget(self.textInfo, 0, 0, 1, 1)

        self.tabText.addTab(self.tabInfo, "")
        self.tabWarnings = QWidget()
        self.tabWarnings.setObjectName(u"tabWarnings")
        self.gridLayout = QGridLayout(self.tabWarnings)
        self.gridLayout.setSpacing(4)
        self.gridLayout.setContentsMargins(3, 3, 3, 3)
        self.gridLayout.setObjectName(u"gridLayout")
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.textAlerts = MyQPlainTextEdit(self.tabWarnings)
        self.textAlerts.setObjectName(u"textAlerts")
        sizePolicy24 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy24.setHorizontalStretch(0)
        sizePolicy24.setVerticalStretch(1)
        sizePolicy24.setHeightForWidth(self.textAlerts.sizePolicy().hasHeightForWidth())
        self.textAlerts.setSizePolicy(sizePolicy24)
        font2 = QFont()
        font2.setFamily(u"Courier New")
        font2.setPointSize(9)
        font2.setBold(True)
        font2.setWeight(75)
        self.textAlerts.setFont(font2)
        self.textAlerts.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.textAlerts.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.textAlerts.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.textAlerts.setLineWrapMode(QPlainTextEdit.NoWrap)
        self.textAlerts.setReadOnly(True)
        self.textAlerts.setTextInteractionFlags(Qt.TextSelectableByMouse)

        self.gridLayout.addWidget(self.textAlerts, 0, 0, 1, 1)

        self.tabText.addTab(self.tabWarnings, "")
        self.splitter_2.addWidget(self.tabText)

        self.gridLayout_31.addWidget(self.splitter_2, 0, 0, 1, 1)


        self.gridLayout_9.addWidget(self.widget_2, 0, 0, 1, 1)

        self.dockWidget.setWidget(self.dockControls)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget)

        self.retranslateUi(MainWindow)

        self.tabWidget.setCurrentIndex(0)
        self.functionTabWidget.setCurrentIndex(0)
        self.xHKLrotBtn.setDefault(False)
        self.xHKLbackrotBtn.setDefault(False)
        self.tabText.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionOpen_reflection_file.setText(QCoreApplication.translate("MainWindow", u"Open reflection file...", None))
        self.actionSettings.setText(QCoreApplication.translate("MainWindow", u"Settings", None))
#if QT_CONFIG(tooltip)
        self.actionSettings.setToolTip(QCoreApplication.translate("MainWindow", u"change mouse speed, font size etc.", None))
#endif // QT_CONFIG(tooltip)
        self.actiondebug.setText(QCoreApplication.translate("MainWindow", u"Debug", None))
        self.actionExit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
        self.actionSave_reflection_file.setText(QCoreApplication.translate("MainWindow", u"Save reflection file...", None))
        self.actionReset_View.setText(QCoreApplication.translate("MainWindow", u"Reset View", None))
        self.actionSave_Current_Image.setText(QCoreApplication.translate("MainWindow", u"Save Current Image...", None))
        self.actionCCTBXwebsite.setText(QCoreApplication.translate("MainWindow", u"CCTBX Documentation", None))
        self.actionLocal_Help.setText(QCoreApplication.translate("MainWindow", u"Documentation", None))
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", u"About", None))
        self.actionColour_Gradient.setText(QCoreApplication.translate("MainWindow", u"Colour Gradient...", None))
        self.actionHKLviewer_Tutorial.setText(QCoreApplication.translate("MainWindow", u"Tutorial", None))
        self.actionBackground_Colour.setText(QCoreApplication.translate("MainWindow", u"Background Colour", None))
#if QT_CONFIG(tooltip)
        self.actionBackground_Colour.setToolTip(QCoreApplication.translate("MainWindow", u"change colour of the background", None))
#endif // QT_CONFIG(tooltip)
        self.dockWidget.setWindowTitle(QCoreApplication.translate("MainWindow", u"HKLviewer Controls", None))
        self.XtriageBtn.setText(QCoreApplication.translate("MainWindow", u"Run Xtriage", None))
        self.XtricorderBtn.setText(QCoreApplication.translate("MainWindow", u"Run Xtricorder", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabPresetbuttons), QCoreApplication.translate("MainWindow", u"Quick View", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"Display a dataset with a double-click. Right-click table for more options.", None))
        self.sysabsentcheckbox.setText(QCoreApplication.translate("MainWindow", u"Show Systematic Absences", None))
        self.ExpandReflsGroupBox.setTitle(QCoreApplication.translate("MainWindow", u"Expand reflections", None))
#if QT_CONFIG(tooltip)
        self.expandP1checkbox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Expand reflections from their asymmetric wedge by replicating reflections from succesive rotations operations defined by the spacegroup. If the set of reflections is not symmetry unique some (h,k,l) indices may display more than one reflection.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.expandP1checkbox.setText(QCoreApplication.translate("MainWindow", u"Expand to P1", None))
#if QT_CONFIG(tooltip)
        self.expandAnomalouscheckbox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Expand reflections to include -h,-k,-l</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.expandAnomalouscheckbox.setText(QCoreApplication.translate("MainWindow", u"Show Friedel pairs", None))
#if QT_CONFIG(tooltip)
        self.missingcheckbox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Show those reflections not recorded, assuming the set of reflections forms a sphere.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.missingcheckbox.setText(QCoreApplication.translate("MainWindow", u"Show Missing Reflections", None))
        self.onlymissingcheckbox.setText(QCoreApplication.translate("MainWindow", u"Only", None))
        self.SpacegroupLabel.setText(QCoreApplication.translate("MainWindow", u"Space Subgroups", None))
#if QT_CONFIG(tooltip)
        self.SpaceGroupComboBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Expand the original dataset to a lower symmetry. This dataset can be saved from the menu to a new file.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.functionTabWidget.setTabText(self.functionTabWidget.indexOf(self.tab), QCoreApplication.translate("MainWindow", u"Expansion", None))
#if QT_CONFIG(tooltip)
        self.ClipPlaneChkGroupBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Limit the view of reflections with a clip plane parallel to the screen</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ClipPlaneChkGroupBox.setTitle(QCoreApplication.translate("MainWindow", u"Slice with a clip plane parallel to screen that:", None))
        self.parallel_current_orientation_btn.setText(QCoreApplication.translate("MainWindow", u"uses current orientation", None))
#if QT_CONFIG(tooltip)
        self.normal_vec_btn.setToolTip(QCoreApplication.translate("MainWindow", u"Useful for inspecting reflections perpendicular to a rotation axis or a tNCS vector", None))
#endif // QT_CONFIG(tooltip)
        self.normal_vec_btn.setText(QCoreApplication.translate("MainWindow", u"is normal to:", None))
#if QT_CONFIG(tooltip)
        self.normal_realspace_vec_btn.setToolTip(QCoreApplication.translate("MainWindow", u"Useful for inspecting reflections satisfying an equation for a plane through reciprocal space", None))
#endif // QT_CONFIG(tooltip)
        self.normal_realspace_vec_btn.setText("")
#if QT_CONFIG(tooltip)
        self.normal_realspace_vec_label.setToolTip(QCoreApplication.translate("MainWindow", u"Useful for inspecting reflections satisfying an equation for a plane through reciprocal space", None))
#endif // QT_CONFIG(tooltip)
        self.normal_realspace_vec_label.setText(QCoreApplication.translate("MainWindow", u"is normal to real space vector associated with:", None))
        self.label_13.setText(QCoreApplication.translate("MainWindow", u"Scale:", None))
#if QT_CONFIG(tooltip)
        self.clipplane_normal_vector_length.setToolTip(QCoreApplication.translate("MainWindow", u"use current scale or multiply with a number to form a new scale", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_15.setToolTip(QCoreApplication.translate("MainWindow", u"in units of the selected vector above", None))
#endif // QT_CONFIG(tooltip)
        self.label_15.setText(QCoreApplication.translate("MainWindow", u"Distance from origin", None))
        self.AutoClipWidthCheckBox.setText(QCoreApplication.translate("MainWindow", u"Automatic Clip plane width", None))
#if QT_CONFIG(tooltip)
        self.hkldist_spinBox.setToolTip(QCoreApplication.translate("MainWindow", u"in units of the selected vector above", None))
#endif // QT_CONFIG(tooltip)
        self.label_21.setText(QCoreApplication.translate("MainWindow", u"Clip Plane Width:", None))
#if QT_CONFIG(tooltip)
        self.clipwidth_spinBox.setToolTip(QCoreApplication.translate("MainWindow", u"Adjust width to exclude reflections that should not be visible or to make visible reflections that are not", None))
#endif // QT_CONFIG(tooltip)
        self.RotateGroupBox.setTitle(QCoreApplication.translate("MainWindow", u"Rotate reflections around X, Y, Z axes", None))
        self.label_14.setText(QCoreApplication.translate("MainWindow", u"Angular step of:", None))
        self.angleStepHKLrotSpinBox.setSuffix(QCoreApplication.translate("MainWindow", u"\u00ba", None))
        self.groupBox_2.setTitle(QCoreApplication.translate("MainWindow", u"Rotate around X", None))
        self.xHKLrotBtn.setText(QCoreApplication.translate("MainWindow", u"+", None))
        self.xHKLbackrotBtn.setText(QCoreApplication.translate("MainWindow", u"-", None))
        self.groupBox_4.setTitle(QCoreApplication.translate("MainWindow", u"Rotate around Y", None))
        self.yHKLrotBtn.setText(QCoreApplication.translate("MainWindow", u"+", None))
        self.yHKLbackrotBtn.setText(QCoreApplication.translate("MainWindow", u"-", None))
        self.groupBox_6.setTitle(QCoreApplication.translate("MainWindow", u"Rotate around Z", None))
        self.zHKLrotBtn.setText(QCoreApplication.translate("MainWindow", u"+", None))
        self.zHKLbackrotBtn.setText(QCoreApplication.translate("MainWindow", u"-", None))
        self.functionTabWidget.setTabText(self.functionTabWidget.indexOf(self.tab_2), QCoreApplication.translate("MainWindow", u"Slicing", None))
        self.groupBox_3.setTitle(QCoreApplication.translate("MainWindow", u"Radii size of HKL spheres", None))
#if QT_CONFIG(tooltip)
        self.power_scale_spinBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_11.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>A linear scale factor of 1 means that if two reflectiions with the largest data values happen to be next to each other their spheres will touch but not overlap.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_11.setText(QCoreApplication.translate("MainWindow", u"Linear scale factor", None))
#if QT_CONFIG(tooltip)
        self.ManualPowerScalecheckbox.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.ManualPowerScalecheckbox.setText(QCoreApplication.translate("MainWindow", u"User defined power scaling", None))
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"Power scale factor:", None))
#if QT_CONFIG(tooltip)
        self.radii_scale_spinBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>A linear scale factor of 1 means that if two reflectiions with the largest data values happen to be next to each other their spheres will touch but not overlap.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_7.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Tick the <span style=\" font-weight:600;\">User defined power scaling</span> box for chosing a <span style=\" font-weight:600;\">Power scale factor</span>. Untick this box to get an <span style=\" font-weight:600;\">automatic power scale factor.</span><br/>An <span style=\" font-weight:600;\">automatic power scale</span> factor will size the reflections so that the reflection with the smallest data value is rendered about 10 times smaller than the reflection with the largest data value. <br/>A <span style=\" font-weight:600;\">power scale factor = 1</span> will size the reflections proportional to their data value. <br/>A <span style=\" font-weight:600;\">power scale factor = 0</span> causes all reflections to have the same size regardless of their data values. <br/>A <span style=\" font-weight:600;\">power scale factor &lt; 0</span> will correlate the sizes of reflections negatively to their data values. </p></body></html>", None))
        self.functionTabWidget.setTabText(self.functionTabWidget.indexOf(self.tab_3), QCoreApplication.translate("MainWindow", u"Sizing", None))
        self.OpaqueAllCheckbox.setText(QCoreApplication.translate("MainWindow", u"Show/hide all data", None))
#if QT_CONFIG(tooltip)
        self.binstable.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Change a bin threshold by entering a preferred value in the in the &quot;lower bin value&quot; column for a particular bin.<br/>Change visibility of bins either by ticking or unticking the check boxes or by entering opacity values between 0 and 1. Reflections with values less than 0.3 will not respond to mouse clicks.<br/></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.addDatasetBtn.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Provide a unique label to create a new dataset with the reflections that have opacity = 1.0</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.addDatasetBtn.setText(QCoreApplication.translate("MainWindow", u"Add visible reflections as new dataset...", None))
        self.groupBox_5.setTitle(QCoreApplication.translate("MainWindow", u"Bin according to", None))
        self.label_12.setText(QCoreApplication.translate("MainWindow", u"Number of bins:", None))
#if QT_CONFIG(tooltip)
        self.Nbins_spinBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Select the number of bins for ordering the currently displayed data set. More than about 10-15 bins will slow down the HKLviewer when working with large datasets.<br/>The requested number of bins may not be created if there are zero reflections in some bins.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.BinDataComboBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Rank the currently displayed dataset in bins according resolution or the values of a selected dataset or singletons. Reflections in the currently displayed dataset not matching any reflections in the selected dataset will be put in a bin labelled with &quot;nan&quot;.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.functionTabWidget.setTabText(self.functionTabWidget.indexOf(self.tab_4), QCoreApplication.translate("MainWindow", u"Binning", None))
#if QT_CONFIG(tooltip)
        self.ReciprocUnitCellgrp.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The reciprocal unit cell spanning a*,b*,c* from (0,0,0) to (1,1,1) is located in the centre of the displayed reflections. and is therefore quite small. Adjust the slider to scale its outline to become compatible with the sphere of displayed reflections.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.ReciprocUnitCellgrp.setTitle(QCoreApplication.translate("MainWindow", u"Reciprocal Vectors", None))
        self.label_2.setText(QCoreApplication.translate("MainWindow", u"True to Scale", None))
        self.DrawReciprocUnitCellBox.setText(QCoreApplication.translate("MainWindow", u"Show Unit Cell", None))
        self.label_4.setText(QCoreApplication.translate("MainWindow", u"Close to radius of sphere of reflections", None))
        self.RotationVectorsBox.setTitle(QCoreApplication.translate("MainWindow", u"Rotation Operators or Vector(s)", None))
        self.ShowAllVectorsBtn.setText(QCoreApplication.translate("MainWindow", u"Show All", None))
        self.rotavecangle_labeltxt.setText(QCoreApplication.translate("MainWindow", u"Rotate Reflections around Vector with Angle", None))
#if QT_CONFIG(tooltip)
        self.rotavecangle_slider.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If just one vector is drawn the reflections can be rotated to a particular angle around that vector.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.AlignVectorGroupBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If just one vector is drawn it can be oriented together with the reflections by ticking this checkbox.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.AlignVectorGroupBox.setTitle(QCoreApplication.translate("MainWindow", u"Orient Vector", None))
        self.AlignParallelBtn.setText(QCoreApplication.translate("MainWindow", u"Parallel to Screen", None))
        self.AlignNormalBtn.setText(QCoreApplication.translate("MainWindow", u"Normal to Screen", None))
#if QT_CONFIG(tooltip)
        self.AnimaRotCheckBox.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>If just one vector is drawn the reflections can be rotated continuously around that vector.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.AnimaRotCheckBox.setText(QCoreApplication.translate("MainWindow", u"Rotate continuously", None))
        self.label_8.setText(QCoreApplication.translate("MainWindow", u"Speed", None))
#if QT_CONFIG(tooltip)
        self.vectortable2.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Tick checkboxes to draw the rotation axes defined by the space group.<br/>Enter additional vectors from origin defined either as axes of rotation operators, plain reciprocal coordinates (as hkl) or plain real space fractional coordinates (as abc).<br/>To enter a new vector, first override the &quot;new vector&quot; name with a preferred name. Then enter the definition of the vector in either the &quot;rotation&quot;, the &quot;as hkl&quot; or the &quot;as abc&quot; column.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.RealUnitCellBoxgrp.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>The real space unit cell is often much larger than the sphere of displayed reflections. Adjust the slider to scale its outline to become compatible with the sphere of displayed reflections.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.RealUnitCellBoxgrp.setTitle(QCoreApplication.translate("MainWindow", u"Real Space Vectors", None))
        self.label_6.setText(QCoreApplication.translate("MainWindow", u"True to Scale", None))
        self.DrawRealUnitCellBox.setText(QCoreApplication.translate("MainWindow", u"Show Unit Cell", None))
        self.label_5.setText(QCoreApplication.translate("MainWindow", u"Close to radius of sphere of reflections", None))
        self.functionTabWidget.setTabText(self.functionTabWidget.indexOf(self.tab_5), QCoreApplication.translate("MainWindow", u"Vectors", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabDetails), QCoreApplication.translate("MainWindow", u"Details", None))
        self.tabText.setTabText(self.tabText.indexOf(self.tabInfo), QCoreApplication.translate("MainWindow", u"Info", None))
        self.tabText.setTabText(self.tabText.indexOf(self.tabWarnings), QCoreApplication.translate("MainWindow", u"Verbose Info", None))
    # retranslateUi
