from __future__ import absolute_import, division, print_function
import os
from cctbx.array_family import flex
from iotbx.cli_parser import run_program
import libtbx
from libtbx.utils import null_out
from libtbx.test_utils import approx_equal
from cctbx.programs import qscore




expected_results = {
  17:[
    0.35535516324938227,
0.24550687752861167,
0.42717508108780494,
0.2630431196992697,
0.2512972739404068,
0.0748338849699907,
0.3951188616344501,
0.017261865581353543,
0.47942130214316503,
0.2927000401754054,
0.08603369430277283,
0.30219565421918,
0.39417849168365854,
0.6189297826154754,
0.36598113428758416,
0.07821030825399476,
0.5275589560551526,
0.19580632885270882,
0.27077417168391377,
0.31471829887209857,
0.3158786931123718,
0.5096481626657788,
0.4609767956764144,
0.28235509392736674,
0.4709590709747482,
0.2939374853294539,
0.10241906482206845,
0.4015066315039059,
0.35209047260985793,
0.35059709887741874,
0.3265106583648,
0.2806311093313803,
0.37458818716858017,
0.385126780724512,
0.06154713873358951,
0.10991564773911004,
0.49364138455921214,
0.2544807372533646,
0.5054205573973468,
0.2637558217581824,
0.3140624661999957,
0.2365647784766615,
0.28262674351648415,
0.1969617894777505,
0.3197038813888359,
0.004434119579554559,
0.49852526974799255,
0.4284389897113832,
0.32266761533489585,
0.5064439221443267,
0.4922792436039985,
0.6303751667061026,
0.1542182251535256,
0.17137072347023904,
0.5974219741230471,
0.3533762354980602,
0.27000081206540955,
0.2007048933666327,
0.30627931992625224,
0.4333678839790156,
0.5452464031846214,
0.39074700178563093,
0.44160485208870487,
0.3012758760420372,
0.3250739032545345,
0.43362607699544053,
0.3625137062692818,
0.3737674696637951,
0.42857066342176636,
0.35808570562399467,
0.22410204647321708,
0.3767186160303378,
0.28651652046017084,
-0.049724839252815733,
0.19356789252833098,
0.09094302118136462,
0.42016933552912894,
0.13060556101358295,
0.22990514778100643,
0.24778269855730797,
0.3321627503379433,
0.2793544145496639,
0.36436645199153783,
0.1990021248328906,
0.5972764932446221,
0.38459252021474777,
0.15376046116368622,
0.4350468866909971,
0.34446835591022873,
0.36878927260006605,
0.05794444507950947,
0.1368028652112549,
0.47365762715495435,
0.40950604509893035,
0.21697233895086965,
0.24302703044362328,
0.3419794880192022,
0.5585194498374837,
0.459308252423094,
0.3230117486740559,
0.3148210060317072,
0.13707459657834334,
0.35686464668359086,
0.3070311263154991,
0.3055250982319954,
0.5000373760197506,
0.2828409443923543,
0.22088517997784513,
0.34473673110006714,
0.39401167930098646,
0.1409604644258536,
0.17904487505641237,
0.41512532606270575,
0.051477839079248605,
0.430233223946139,
0.10701871986502859,
0.3554414516983775,
0.15227178169975683,
0.20902369264131399,
0.27523031292228356,
0.5014761466259059,
0.07273646238705293,
0.5228074093643269,
0.28213307002470817,
0.32834396845308833,
0.4546359850826332,
0.2640898256601553,
0.4042889388009938,
-0.058819305685534916,
0.3320355211739059,
0.5368734032575433,
0.38723919567921916,
0.27920683488494874,
0.21293610438730504,
0.28101278857543577,
0.5005434542705948,
0.3471817144906104,
0.21127407819640626,
0.32067511222833683,
0.11079335636572182,
0.17036780464871323,
0.41955675987187646,
0.3905657146499568,
0.3401149986039323,
0.36035223718270976,
0.23917228790998196,
0.36381317879482006,
0.39077694083716824,
0.03118681161607613,
0.04641661292929102,
0.3724988531432701,
0.2643036127826901,
0.30537188074803256,
0.16202886247768936,
0.43568155630265554,
0.3084634599307411,
0.387489124753754,
0.2666390040428182,
0.46279277413454706,
0.02002279771517451,
0.4827489588800846,
0.445680062618974,
0.14784923408302839,
0.4184692111286882,
0.3933408944964084,
0.4550840595198136,
-0.06497059743774909,
0.20326928453476295,
0.5410683745517895,
0.3934791271999539,
0.24834218260971685,
0.2284335972515956,
0.2749252359472737,
0.5811000263463834,
0.5886279113579868,
0.10014876331174488,
0.3558056816456358,
0.23931433448674996,
0.28193700267688226,
0.30923904707665817,
0.3937787470567507,
0.16583160065281066,
0.41937141588607457,
0.11413599799171258,
0.3671212694643467,
0.31069640919716385,
0.05525220154724908,
0.247288738983681,
0.39689271509298957,
0.20134818886327846,
0.5060624692935539,
0.23340144114502143,
0.1047045872234278,
0.26762911598483546,
0.39263746442670566,
0.12692533917487203,
0.3980087754375635,
0.03756336993253084,
0.46101152409796214,
0.42446162573971874,
0.3643343019533042,
0.5130778316649313,
0.3063184055501381,
0.47635554117162227,
0.2022659217974044,
0.2554080063069391,
0.5501695893864158,
0.2846628653680698,
0.3242176784889862,
0.24811871246412262,
0.3255252546682871,
0.5453376573614725,
0.41301426891418463,
0.07307555071072433,
0.4536301022017574,
0.24638397492302436,
0.19814077792624293,
0.3602238859424958,
0.3170086525644145,
0.2972960450133945,
0.4145260546137287,
0.2661909058919775,
0.49307051785060885,
0.42049092767916485,
0.010562206055517411,
0.05167120683170355,
0.48650651743605644,
0.07522293396734439,
0.4990564081521944,
0.3334757193364281,
0.14185320419595457,
0.12828315708419813,
0.11089188858896354,
0.14452747870340907,
0.3699940929152232,
-0.041235846823679784,
0.513812878496174,
0.3694188603001491,
0.28901185662505796,
0.3803523709807769,
0.3765605158390536,
0.4527272022777316,
-0.08048732044100083,
0.18539904739806815,
0.5232189411542995,
0.3022522764188308,
0.35572393347262615,
0.27116261764046895,
0.3626082715676051,
0.5619703843998924,
0.4944482273684381,
0.16248076555523522,
0.3206340194265775,
0.14751443872046044,
0.09595366681825422,
0.40639326593721653,
0.31519352252160526,
0.2403981456993558,
0.36692833148492576,
0.15957380970815432,
0.49190636939034976,
0.3189327704420888,
0.10792266773848919,
0.04212798503994418,
0.39647128156913286,
0.19546149360621035
  ],
    42:[
  
  ]
}
# make flex arrays
expected_results = {key:flex.double(val) for key,val in list(expected_results.items())}

def exercise(test_name):
  pdb_file = libtbx.env.find_in_repositories(
    relative_path=f"phenix_regression/real_space_refine/data/tst_{test_name}.pdb",
    test=os.path.isfile)

  map_file = libtbx.env.find_in_repositories(
    relative_path=f"phenix_regression/real_space_refine/data/tst_{test_name}.ccp4",
    test=os.path.isfile)

  result = run_program(
    program_class=qscore.Program,
    args = [pdb_file,map_file,"probe_allocation_method=progressive shell_radius_num=5 nproc=1 n_probes=8"],
    logger=null_out(),
  )

  
  try:
    expected_result = expected_results[test_name]
    assert approx_equal(expected_result, result.qscore,eps=1.e-2)
  except:
    for val in result.qscore:
      print(str(val)+",")
    raise

if (__name__ == "__main__"):
  """
  Test random files to verify basic functionality remains unchanged
  Data from phenix_regression/real_space_refine/data
  """
  for test_name in [17]:#[17,42,48]:
    exercise(test_name)
  print("OK")
